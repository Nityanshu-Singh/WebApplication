//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TrainRes
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TrainReservationEntities : DbContext
    {
        public TrainReservationEntities()
            : base("name=TrainReservationEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AdminDetail> AdminDetails { get; set; }
        public virtual DbSet<Booking_Details> Booking_Details { get; set; }
        public virtual DbSet<CancelTicket> CancelTickets { get; set; }
        public virtual DbSet<TrainDetail> TrainDetails { get; set; }
        public virtual DbSet<UserDetail> UserDetails { get; set; }
        public virtual DbSet<Class_Type> Class_Type { get; set; }
        public virtual DbSet<TicketPrice> TicketPrices { get; set; }
    
        public virtual int UpdateBooking(Nullable<decimal> trainNo, string @class, Nullable<int> seatsBooked)
        {
            var trainNoParameter = trainNo.HasValue ?
                new ObjectParameter("TrainNo", trainNo) :
                new ObjectParameter("TrainNo", typeof(decimal));
    
            var classParameter = @class != null ?
                new ObjectParameter("Class", @class) :
                new ObjectParameter("Class", typeof(string));
    
            var seatsBookedParameter = seatsBooked.HasValue ?
                new ObjectParameter("SeatsBooked", seatsBooked) :
                new ObjectParameter("SeatsBooked", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateBooking", trainNoParameter, classParameter, seatsBookedParameter);
        }
    
        public virtual int UpdateCancelTicket(Nullable<decimal> trainNo, string @class, Nullable<int> seatsBooked)
        {
            var trainNoParameter = trainNo.HasValue ?
                new ObjectParameter("TrainNo", trainNo) :
                new ObjectParameter("TrainNo", typeof(decimal));
    
            var classParameter = @class != null ?
                new ObjectParameter("Class", @class) :
                new ObjectParameter("Class", typeof(string));
    
            var seatsBookedParameter = seatsBooked.HasValue ?
                new ObjectParameter("SeatsBooked", seatsBooked) :
                new ObjectParameter("SeatsBooked", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateCancelTicket", trainNoParameter, classParameter, seatsBookedParameter);
        }
    }
}
